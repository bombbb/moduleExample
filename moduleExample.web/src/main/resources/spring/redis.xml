<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:elasticsearch="http://www.springframework.org/schema/data/elasticsearch"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/data/elasticsearch
	http://www.springframework.org/schema/data/elasticsearch/spring-elasticsearch.xsd
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	http://www.springframework.org/schema/websocket 
	http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<bean id="redisStandaloneConfiguration"
		class="org.springframework.data.redis.connection.RedisStandaloneConfiguration">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="password"
			value='#{T(org.springframework.data.redis.connection.RedisPassword).of("${redis.password}")}' />
	</bean>
	<bean id="lettuceClientConfiguration"
		class="wzp.moduleExample.util.redis.LettuceClientConfigurationFactory" />
	<bean id="lettuceConnectionFactory"
		class="org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory">
		<constructor-arg name="standaloneConfig"
			ref="redisStandaloneConfiguration" />
		<constructor-arg name="clientConfig"
			ref="lettuceClientConfiguration" />
	</bean>
	<bean id="redisTemplate"
		class="org.springframework.data.redis.core.StringRedisTemplate">
		<constructor-arg name="connectionFactory"
			ref="lettuceConnectionFactory" />
	</bean>
	<bean id="redisReactiveTemplate"
		class="org.springframework.data.redis.core.ReactiveStringRedisTemplate">
		<constructor-arg name="connectionFactory"
			ref="lettuceConnectionFactory" />
	</bean>
</beans>